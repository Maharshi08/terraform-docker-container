[0m[1mdocker_image.nginx: Refreshing state... [id=sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485nginx:latest][0m
[0m[1mdocker_container.nginx: Refreshing state... [id=05e31a9f40c60fa04a34e2bcc9491518e9f853ce4bb58fe34d69eb82c8b12fad][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # docker_container.nginx[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "nginx" {
      [32m+[0m[0m bridge                                      = (known after apply)
      [33m~[0m[0m command                                     = [
          [31m-[0m[0m "nginx",
          [31m-[0m[0m "-g",
          [31m-[0m[0m "daemon off;",
        ] -> (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [31m-[0m[0m cpu_shares                                  = 0 [90m-> null[0m[0m
      [31m-[0m[0m dns                                         = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_opts                                    = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_search                                  = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint                                  = [
          [31m-[0m[0m "/docker-entrypoint.sh",
        ] -> (known after apply)
      [33m~[0m[0m env                                         = [] -> (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [31m-[0m[0m group_add                                   = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname                                    = "05e31a9f40c6" -> (known after apply)
      [33m~[0m[0m id                                          = "05e31a9f40c60fa04a34e2bcc9491518e9f853ce4bb58fe34d69eb82c8b12fad" -> (known after apply)
      [33m~[0m[0m image                                       = "sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485" [33m->[0m[0m "nginx:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m init                                        = false -> (known after apply)
      [33m~[0m[0m ipc_mode                                    = "private" -> (known after apply)
      [33m~[0m[0m log_driver                                  = "json-file" -> (known after apply)
      [31m-[0m[0m log_opts                                    = {} [90m-> null[0m[0m
      [31m-[0m[0m max_retry_count                             = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory                                      = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap                                 = 0 [90m-> null[0m[0m
        name                                        = "my-nginx-container"
      [33m~[0m[0m network_data                                = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway                   = "172.17.0.1"
              [31m-[0m[0m global_ipv6_prefix_length = 0
              [31m-[0m[0m ip_address                = "172.17.0.2"
              [31m-[0m[0m ip_prefix_length          = 16
              [31m-[0m[0m mac_address               = "02:42:ac:11:00:02"
              [31m-[0m[0m network_name              = "bridge"
                [90m# (2 unchanged attributes hidden)[0m[0m
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode                                = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged                                  = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports                           = false [90m-> null[0m[0m
      [33m~[0m[0m runtime                                     = "runc" -> (known after apply)
      [33m~[0m[0m security_opts                               = [] -> (known after apply)
      [33m~[0m[0m shm_size                                    = 64 -> (known after apply)
      [33m~[0m[0m stop_signal                                 = "SIGQUIT" -> (known after apply)
      [33m~[0m[0m stop_timeout                                = 0 -> (known after apply)
      [31m-[0m[0m storage_opts                                = {} [90m-> null[0m[0m
      [31m-[0m[0m sysctls                                     = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs                                       = {} [90m-> null[0m[0m
        [90m# (19 unchanged attributes hidden)[0m[0m

      [33m~[0m[0m healthcheck (known after apply)

      [33m~[0m[0m labels (known after apply)

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1mPlan:[0m 1 to add, 0 to change, 1 to destroy.
[0m[0m[1mdocker_container.nginx: Destroying... [id=05e31a9f40c60fa04a34e2bcc9491518e9f853ce4bb58fe34d69eb82c8b12fad][0m[0m
[0m[1mdocker_container.nginx: Destruction complete after 1s[0m
[0m[1mdocker_container.nginx: Creating...[0m[0m
[0m[1mdocker_container.nginx: Creation complete after 1s [id=b1bc7ca5b0b2fad3ec57a8e09399a91483aeceba6b99cf3a168c4481aab23209][0m
[0m[1m[32m
Apply complete! Resources: 1 added, 0 changed, 1 destroyed.
[0m[0m[1mdocker_image.nginx: Refreshing state... [id=sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485nginx:latest][0m
[0m[1mdocker_container.nginx: Refreshing state... [id=b1bc7ca5b0b2fad3ec57a8e09399a91483aeceba6b99cf3a168c4481aab23209][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [31m-[0m destroy[0m

Terraform will perform the following actions:

[1m  # docker_container.nginx[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "docker_container" "nginx" {
      [31m-[0m[0m attach                                      = false [90m-> null[0m[0m
      [31m-[0m[0m command                                     = [
          [31m-[0m[0m "nginx",
          [31m-[0m[0m "-g",
          [31m-[0m[0m "daemon off;",
        ] [90m-> null[0m[0m
      [31m-[0m[0m container_read_refresh_timeout_milliseconds = 15000 [90m-> null[0m[0m
      [31m-[0m[0m cpu_shares                                  = 0 [90m-> null[0m[0m
      [31m-[0m[0m dns                                         = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_opts                                    = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_search                                  = [] [90m-> null[0m[0m
      [31m-[0m[0m entrypoint                                  = [
          [31m-[0m[0m "/docker-entrypoint.sh",
        ] [90m-> null[0m[0m
      [31m-[0m[0m env                                         = [] [90m-> null[0m[0m
      [31m-[0m[0m group_add                                   = [] [90m-> null[0m[0m
      [31m-[0m[0m hostname                                    = "b1bc7ca5b0b2" [90m-> null[0m[0m
      [31m-[0m[0m id                                          = "b1bc7ca5b0b2fad3ec57a8e09399a91483aeceba6b99cf3a168c4481aab23209" [90m-> null[0m[0m
      [31m-[0m[0m image                                       = "sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485" [90m-> null[0m[0m
      [31m-[0m[0m init                                        = false [90m-> null[0m[0m
      [31m-[0m[0m ipc_mode                                    = "private" [90m-> null[0m[0m
      [31m-[0m[0m log_driver                                  = "json-file" [90m-> null[0m[0m
      [31m-[0m[0m log_opts                                    = {} [90m-> null[0m[0m
      [31m-[0m[0m logs                                        = false [90m-> null[0m[0m
      [31m-[0m[0m max_retry_count                             = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory                                      = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap                                 = 0 [90m-> null[0m[0m
      [31m-[0m[0m must_run                                    = true [90m-> null[0m[0m
      [31m-[0m[0m name                                        = "my-nginx-container" [90m-> null[0m[0m
      [31m-[0m[0m network_data                                = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway                   = "172.17.0.1"
              [31m-[0m[0m global_ipv6_prefix_length = 0
              [31m-[0m[0m ip_address                = "172.17.0.2"
              [31m-[0m[0m ip_prefix_length          = 16
              [31m-[0m[0m mac_address               = "02:42:ac:11:00:02"
              [31m-[0m[0m network_name              = "bridge"
                [90m# (2 unchanged attributes hidden)[0m[0m
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m network_mode                                = "bridge" [90m-> null[0m[0m
      [31m-[0m[0m privileged                                  = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports                           = false [90m-> null[0m[0m
      [31m-[0m[0m read_only                                   = false [90m-> null[0m[0m
      [31m-[0m[0m remove_volumes                              = true [90m-> null[0m[0m
      [31m-[0m[0m restart                                     = "no" [90m-> null[0m[0m
      [31m-[0m[0m rm                                          = false [90m-> null[0m[0m
      [31m-[0m[0m runtime                                     = "runc" [90m-> null[0m[0m
      [31m-[0m[0m security_opts                               = [] [90m-> null[0m[0m
      [31m-[0m[0m shm_size                                    = 64 [90m-> null[0m[0m
      [31m-[0m[0m start                                       = true [90m-> null[0m[0m
      [31m-[0m[0m stdin_open                                  = false [90m-> null[0m[0m
      [31m-[0m[0m stop_signal                                 = "SIGQUIT" [90m-> null[0m[0m
      [31m-[0m[0m stop_timeout                                = 0 [90m-> null[0m[0m
      [31m-[0m[0m storage_opts                                = {} [90m-> null[0m[0m
      [31m-[0m[0m sysctls                                     = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs                                       = {} [90m-> null[0m[0m
      [31m-[0m[0m tty                                         = false [90m-> null[0m[0m
      [31m-[0m[0m wait                                        = false [90m-> null[0m[0m
      [31m-[0m[0m wait_timeout                                = 60 [90m-> null[0m[0m
        [90m# (7 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m ports {
          [31m-[0m[0m external = 8081 [90m-> null[0m[0m
          [31m-[0m[0m internal = 80 [90m-> null[0m[0m
          [31m-[0m[0m ip       = "0.0.0.0" [90m-> null[0m[0m
          [31m-[0m[0m protocol = "tcp" [90m-> null[0m[0m
        }
    }

[1m  # docker_image.nginx[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "docker_image" "nginx" {
      [31m-[0m[0m id          = "sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485nginx:latest" [90m-> null[0m[0m
      [31m-[0m[0m image_id    = "sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485" [90m-> null[0m[0m
      [31m-[0m[0m name        = "nginx:latest" [90m-> null[0m[0m
      [31m-[0m[0m repo_digest = "nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab" [90m-> null[0m[0m
    }

[1mPlan:[0m 0 to add, 0 to change, 2 to destroy.
[0m[0m[1mdocker_container.nginx: Destroying... [id=b1bc7ca5b0b2fad3ec57a8e09399a91483aeceba6b99cf3a168c4481aab23209][0m[0m
[0m[1mdocker_container.nginx: Destruction complete after 1s[0m
[0m[1mdocker_image.nginx: Destroying... [id=sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485nginx:latest][0m[0m
[0m[1mdocker_image.nginx: Destruction complete after 0s[0m
[0m[1m[32m
Destroy complete! Resources: 2 destroyed.
[0m
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # docker_container.nginx[0m will be created
[0m  [32m+[0m[0m resource "docker_container" "nginx" {
      [32m+[0m[0m attach                                      = false
      [32m+[0m[0m bridge                                      = (known after apply)
      [32m+[0m[0m command                                     = (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [32m+[0m[0m container_read_refresh_timeout_milliseconds = 15000
      [32m+[0m[0m entrypoint                                  = (known after apply)
      [32m+[0m[0m env                                         = (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [32m+[0m[0m hostname                                    = (known after apply)
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m image                                       = "nginx:latest"
      [32m+[0m[0m init                                        = (known after apply)
      [32m+[0m[0m ipc_mode                                    = (known after apply)
      [32m+[0m[0m log_driver                                  = (known after apply)
      [32m+[0m[0m logs                                        = false
      [32m+[0m[0m must_run                                    = true
      [32m+[0m[0m name                                        = "my-nginx-container"
      [32m+[0m[0m network_data                                = (known after apply)
      [32m+[0m[0m read_only                                   = false
      [32m+[0m[0m remove_volumes                              = true
      [32m+[0m[0m restart                                     = "no"
      [32m+[0m[0m rm                                          = false
      [32m+[0m[0m runtime                                     = (known after apply)
      [32m+[0m[0m security_opts                               = (known after apply)
      [32m+[0m[0m shm_size                                    = (known after apply)
      [32m+[0m[0m start                                       = true
      [32m+[0m[0m stdin_open                                  = false
      [32m+[0m[0m stop_signal                                 = (known after apply)
      [32m+[0m[0m stop_timeout                                = (known after apply)
      [32m+[0m[0m tty                                         = false
      [32m+[0m[0m wait                                        = false
      [32m+[0m[0m wait_timeout                                = 60

      [32m+[0m[0m healthcheck (known after apply)

      [32m+[0m[0m labels (known after apply)

      [32m+[0m[0m ports {
          [32m+[0m[0m external = 8081
          [32m+[0m[0m internal = 80
          [32m+[0m[0m ip       = "0.0.0.0"
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # docker_image.nginx[0m will be created
[0m  [32m+[0m[0m resource "docker_image" "nginx" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m image_id    = (known after apply)
      [32m+[0m[0m name        = "nginx:latest"
      [32m+[0m[0m repo_digest = (known after apply)
    }

[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
